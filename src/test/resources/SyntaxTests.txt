# number parsing
0=0
-0=-0
123=123
-123=-123
1.234=1.234
-1.234=-1.234
Inf=Inf
-Inf=-Inf

# string parsing
'foo'="foo"
"foo"="foo"
"'foo"="'foo"
"'foo'"="'foo'"
"foo'"="foo'"
"f'o'o"="f'o'o"
'"foo'="\"foo"
'foo"'="foo\""
'f\'o\'o'="f'o'o"
"f\"o\"o"="f\"o\"o"
"back\\slash"="back\\slash"
'back\\slash'="back\\slash"

# boolean parsing
true=true
false=false

# null parsing
null=null

# arbitrary white space
1 + 1=2
1+1=2
   1   +1=2
(1 + 1   )=2

# unary minus
-1=-1
-0=0
-23=-23
-(-1)=1
-'foo'=0
-'0'=0
-'23'=-23
-true=-1
-false=0
-null=0

# unary plus
+1=1
+0=0
+(-1)=-1
-(+1)=-1
+(+1)=1
+'foo'=0
+'0'=0
+'23'=23
+true=1
+false=0
+null=0

# logical not
!1=false
!0=true
!''=true
!'foo'=false
!'true'=false
!'false'=false
!'null'=false
!true=false
!!true=true
!false=true
!!false=false
!null=true

# addition
1+2=3
12345 + 67890=80235
1234567890 + 1234567890=2469135780
1.5+1.5=3.0
1.5+1=2.5
'foo'+'bar'="foobar"
'foo'+5="foo5"
5+'foo'="5foo"
'5'+5="55"
5+'5'="55"
true+1=2
false+1=1
true+'foo'="truefoo"
null+5=5
null+true=1
null+false=0
null+'foo'="foo"
null+null=0
5+null=5
true+null=1
false+null=0
'foo'+null="foo"

# subtraction
1-1=0
10-7=3
3-7=-4
4611686018427388000 - 4611686018427388000=0
'foo'-'bar'=0
'foo'-4=-4
true-1=0
false-1=-1
true-'foo'=1
true-'5'=-4
1-null=1
'foo'-null=0
'5'-null=5
true-null=1

# multiplication
1*1=1
4*9=36
-5*9=-45
6*-9=-54
-7*-9=63
4.2*9.3=39.06
'foo'*5=0
true*100=100
false*100=0
true*'foo'=0
true*'5'=5
1*null=0
'foo'*null=0
'5'*null=0
true*null=0

# division
1/1=1
1/0=Inf
0/0=NaN
8/2=4.0
8.0/2=4.0
9/2=4.5
-10/2=-5.0
10/-2.0=-5.0
-10.0/-2.0=5.0
'foo'/5=0
5/'foo'=Inf
true/100=0.01
100/true=100
false/100=0
100/false=Inf
true/'foo'=Inf
'foo'/true=0
1/null=Inf
null/1=0
'foo'/null=NaN
null/'foo'=NaN
'5'/null=Inf
true/null=Inf
null/true=0
null/false=NaN

# modulo
1 % 1=0
2 % 1=0
1 % 2=1
2 % -3=2
-3 % 4=-3
-4 % -500=-4
'foo' % 5=0
5 % 'foo'=NaN
true % 100=1
100 % true=0
false % 100=0
100 % false=NaN
true % 'foo'=NaN
'foo' % true=0
1 % null=NaN
null % 1=0
'foo' % null=NaN
null % 'foo'=NaN
'5' % null=NaN
null % '5'=0
true % null=NaN
null % true=0

# less than
1 < 1=false
1 < 1.0001=true
1.0001 < 1=false
1 < 2=true
2 < 1=false
1 < '2'=true
'2' < 1=false
'10' < 2=false
2 < '10'=true
true < 2=true
2 < 2=false
true < 0=false
0 < true=true
false < 0=false
0 < false=false
false < 1=true
1 < false=false
null < 1=true
1 < null=false
null < 0=false
0 < null=false

# less than or equal
1 <= 0=false
0 <= 1=true
1 <= 1=true
1 <= 2=true
2 <= 1=false
1 <= '2'=true
'2' <= 1=false
'10' <= 2=false
2 <= '10'=true
true <= 2=true
2 <= true=false
true <= 0=false
0 <= true=true
true <= 1=true
1 <= true=true
false <= 0=true
0 <= false=true
false <= -0.00001=false
-0.00001 <= false=true
null <= 1=true
1 <= null=false
null <= 0=true
0 <= null=true
null <= -2345=false
-2345 <= null=true

# greater than
1 > 1=false
1.0001 > 1=true
1 > 1.0001=false
2 > 1=true
1 > 2=false
'2' > 1=true
1 > '2'=false
2 > '10'=false
'10' > 2=true
2 > true=true
true > 2=false
0 > true=false
true > 0=true
0 > false=false
false > 0=false
1 > false=true
false > 1=false
1 > null=true
null > 1=false
0 > null=false
null > 0=false

# greater than or equal
0 >= 1=false
1 >= 0=true
1 >= 1=true
2 >= 1=true
1 >= 2=false
'2' >= 1=true
1 >= '2'=false
2 >= '10'=false
'10' >= 2=true
2 >= true=true
true >= 2=false
0 >= true=false
true >= 0=true
1 >= true=true
true >= 1=true
0 >= false=true
false >= 0=true
-0.00001 >= false=false
false >= -0.00001=true
1 >= null=true
null >= 1=false
0 >= null=true
null >= 0=true
-2345 >= null=false
null >= -2345=true

# logical equals
null == null=true
true == true=true
false == false=true
'foo' == 'foo'=true
0 == 0=true
+0 == -0=true
0 == false=true
false == 0=true
'' == false=true
false == ''=true
'' == 0=true
0 == ''=true
'0' == 0=true
0 == '0'=true
'17' == 17=true
17 == '17'=true
null == true=false
true == null=false
null == false=false
false == null=false
null == 0=false
0 == null=false
null == 'null'=false
null == 'null'=false

# logical not equals
null != null=false
true != true=false
false != false=false
'foo' != 'foo'=false
0 != 0=false
+0 != -0=false
0 != false=false
false != 0=false
'' != false=false
false != ''=false
'' != 0=false
0 != ''=false
'0' != 0=false
0 != '0'=false
'17' != 17=false
17 != '17'=false
null != true=true
true != null=true
null != false=true
false != null=true
null != 0=true
0 != null=true
null != 'null'=true
null != 'null'=true

# logical and
true && true=true
true && false=false
false && true=false
false && false=false
true && true && true && false && true=false
1 && false=false
0 && 11=0
12 && 11=11
'monkey' && 'potato'="potato"
null && 'potato'=null
null && null=null

# logical or
true || true=true
true || false=true
false || true=true
false || false=false
false || false || false || true || false=true
1 || false=1
0 || 11=11
12 || 11=12
'monkey' || 'potato'="monkey"
null || 'potato'="potato"
null || null=null

# ternary expression
true ? 'starfish' : 'gorilla'="starfish"
false ? 'starfish' : 'gorilla'="gorilla"
0 ? 'starfish' : 'gorilla'="gorilla"
12345 ? 'starfish' : 'gorilla'="starfish"
null ? 'starfish' : 'gorilla'="gorilla"
'xxx' && 'yyy' ? 'starfish' || 'seamonkey' : 'gorilla'="starfish"
'alpha' ? 'beta' ? 'charlie' ? 'delta' : 'echo' : 'foxtrot' : 'golf'="delta"
'alpha' ? 'beta' ? 'charlie' : 'delta' ? 'echo' : 'foxtrot' : 'golf'="charlie"
'alpha' ? 'beta' ? 'charlie' : 'delta' : 'echo' ? 'foxtrot' : 'golf'="charlie"

# compound expressions
1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9=45
1 + 2 - 3 + 4 - 5 + 6 - 7 + 8 - 9=-3
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9=362880
(1 * 2) + (3 * 4) - (5 / 6) * (7 + 8) + 9=10.5

# function calls
max(1)=1
max(1, 2)=2
max(1, 7, 2, 6, 3, 5, 4)=7
min(1)=1
min(1, 2)=1
min(7, 2, 6, 1, 3, 5, 4)=1
min(max(1, 2, 3), max(4, 5, 6), max(7, 8, 9))=3

# unary and function precedence
!false && sum(1, 2, 3)=6
!false && sum(1, -1)=0
true && sum(1, 2, 3)=6
!true && sum(1, -1)=false

# variables
iamnull=null
iamone=1
iamonepointfive=1.5
iamtrue=true
iamfalse=false
iamfoo="foo"
iamunset=null
iamone + iamone=2
iamonepointfive * 4.5=6.75
iamfoo + iamfalse + iamnull + 'bar'="foofalsebar"
iamtrue || iamfalse=true
iamtrue && iamfalse=false

# arrays
[].size()=0
[,].size()=0
[][0]=null
[][10000]=null
[][-1]=null
[1].size()=1
[1][0]=1
[1][-1]=null
[1][1]=null
[1][1][1]=null
[1, 2, 3, 4].size()=4
[1, 2, 3, 4,].size()=4
[1, 2, 3, 4][0]=1
[1, 2, 3, 4][1]=2
[1, 2, 3, 4][2]=3
[1, 2, 3, 4][3]=4
[1, 2, 3, 4]['1']=2
[1, 2, 3, 4]['11']=null
[1, 2, 3, 4]['eleven']=1
[1, 2, 3, 4]['']=1
[1, 2, 3, 4][null]=1
[1, 2, 3, 4][0/0]=1
[1, 2, 3, 4][Inf]=null
[1, 2, 3, 4][false]=1
[1, 2, 3, 4][true]=2
['foo', null, ['bar']].size()=3
['foo', null, ['bar']][0]="foo"
['foo', null, ['bar']][1]=null
['foo', null, ['bar']][2][0]="bar"
[1, 2, 3, 4][0]=1
[1, 2, 3, 4][2]=3
[['a', 'b'], 2, ['c', 'd'], 4][0][1]="b"
emptyarray[-1]=null
emptyarray[0]=null
emptyarray[1]=null
emptyarray['a']=null
emptyarray == null=false
emptyarray == true=false
emptyarray == false=false
emptyarray == 1=false
emptyarray == emptyarray=true
!emptyarray=false
anumber[-1]=null
anumber[0]=1
anumber[1]=null
numbers[-12313]=null
numbers[0]=1
numbers[0.123]=1
numbers[0.987]=1
numbers[1]=2
numbers[2]=3
numbers[1233125641]=null
foorbararray[0]="foo"
foorbararray[1]="bar"
mixedarray[0]=1
mixedarray[1]="foo"
mixedarray[2]=null
nestedarray[0][1]=2
nestedarray[1][0]=3
nestedarray[100][99]=null
[emptyarray, mixedarray[0], nestedarray[0]][0] == []=true
[emptyarray, mixedarray[0], nestedarray[0]][1] == 1=true
[emptyarray, mixedarray[0], nestedarray[0]][2][1] == 2=true
(foorbararray[1] ? mixedarray : numbers)[1]="foo"
sum([7, ['8'], 'eleven', numbers])=21
![]=false
[] == true=false
[] == false=false
[] == null=false
[] == '[]'=false
[false] == true=false
[false] == false=false
[123] ==123 =false
[] == []=true
[] == [1]=false
[1] == [1]=true
['1'] == [1]=true
[1, 2, 3, 4] == [1, 2, 3, 4]=true
[1, 2, 3, 4] == [1, 2, 3, [4]]=false
[5] + 1=1
1 + [5]=1
[] + 'hello'="[]hello"
'hello' + ['world']="hello[world]"
'hello' + ['world', '!']="hello[world, !]"
['a'] + null=0
['a'] + ['b'] == ['a', 'b']=true
['a', null] + ['b', 1] == ['a', null, 'b', 1]=true
[] + ['b', 'c'] == ['b', 'c']=true
[] + [] == []=true
[123] - 5=-5
7 - [123]=7
[123] * 5=0
6 * [123]=0
4/[123]=Inf
[13]/3=0

# maps
{}.keys().size()=0
{}['a']=null
{a: 'a'}['a']="a"
{'a': 'a'}['a']="a"
{"a": 'a'}['a']="a"
{"a": 'a',}['a']="a"
{"a": 'a'}.keys().size()=1
{a: "a", one: 1, '2': 'two', isnull: null}['a']="a"
{a: "a", one: 1, '2': 'two', isnull: null}['one']=1
{a: "a", one: 1, '2': 'two', isnull: null}['2']="two"
{a: "a", one: 1, '2': 'two', isnull: null}[2]="two"
{a: "a", one: 1, '2': 'two', isnull: null}['isnull']=null
{a: "a", one: 1, '2': 'two', isnull: null}['nosuchindex']=null
{a: "a", one: 1, '2': 'two', isnull: null}[-123]=null
{a: "a", one: 1, '2': 'two', isnull: null}.keys().size()=4
flatmap['a']="a"
flatmap['one']=1
flatmap['2']="two"
flatmap[2]="two"
flatmap['isnull']=null
flatmap['nosuchindex']=null
flatmap[-123]=null
flatmap.keys().size()=4
{a: {'b': {"c": "charlie"}}}['a']['b']['c']="charlie"
{a: "a", b: [{c: "d"}, "e"]}['b'][0]['c']="d"
{"a": [1, 2, 3].min(), "b": {"a": 1, "b": 2}.keys().size()}['a']=1
{"a": [1, 2, 3].min(), "b": {"a": 1, "b": 2}.keys().size()}['b']=2
complexmap['ismap']['a']="alpha"
complexmap['ismap']['c']="charlie"
complexmap['ismap']['d']=null
complexmap['ismap']['d']['e']=null
complexmap['isarrayofmap'][0]['e']="echo"
complexmap['isarrayofmap'][0]['f']=null
complexmap['isarrayofmap'][2]['j']="juliette"
complexmap['isarrayofmap'][3]['j']=null
complexmap['isarrayofmap'][flatmap['one']]['g']="golf"
complexmap['isarrayofmap'][[4, 3, 2, 1][3]]['g']="golf"
!{}=false
{} == {}=true
{} != {}=false
{} == {a: "a", one: 1, '2': 'two', isnull: null}=false
{a: "a", one: 1, '2': 'two', isnull: null} == flatmap=true
{'a': "a", one: 1, '2': 'two', "isnull": null} == flatmap=true
!flatmap=false
flatmap == flatmap=true
flatmap != flatmap=false
flatmap != emptyarray=true
flatmap == emptyarray=false
flatmap == 'flatmap'=false
flatmap == 12=false
flatmap == null=false
flatmap == true=false
flatmap == false=false
complexmap == complexmap=true
complexmap != emptyarray=true
complexmap == emptyarray=false
complexmap != flatmap=true
complexmap == flatmap=false
complexmap['nestedflatmap'] == flatmap=true
complexmap['nestedflatmap'] != flatmap=false
flatmap.a="a"
flatmap.one=1
flatmap.two=null
complexmap.isarrayofmap[0].d="delta"
complexmap.nestedflatmap.a="a"
complexmap.nestedflatmap.b.c=null
flatmap + flatmap=0
flatmap + 1=1
1 + flatmap=1
flatmap + false=0
false + flatmap=0
flatmap + true=1
true + flatmap=1
flatmap + null=0
null + flatmap=0
flatmap + [123]=0
[234] + flatmap=0
flatmap - flatmap=0
flatmap - 1=-1
1 - flatmap=1
flatmap - false=0
false - flatmap=0
flatmap - true=-1
true - flatmap=1
flatmap - null=0
null - flatmap=0
flatmap - [235]=0
[456] - flatmap=0
flatmap * flatmap=0
flatmap * 12=0
12 * flatmap=0
flatmap * true=0
true * flatmap=0
flatmap * false=0
false * flatmap=0
flatmap * null=0
null * flatmap=0
flatmap / flatmap=NaN
flatmap / 23=0
23 / flatmap=Inf
flatmap / true=0
true / flatmap=Inf
flatmap / false=NaN
false / flatmap=NaN
flatmap / null=NaN
null/flatmap=NaN
